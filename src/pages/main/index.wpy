<template>
  <view class="page-index">
    <view>
      <button type="primary" loading="{{httpLoading}}" bindtap="testtap" hover-class="other-button-hover"> default </button>
    </view>
    <SearchBar :placeholder="searchText"></SearchBar>
    <Swiper :list.sync="swipers" height="280"></Swiper>
    <Category :list.sync="categorys" col="4"></Category>
    <IndexList :list.sync="list" title="图书列表" :loading.sync="loading" :noMore.sync="noMoreList"></IndexList>
  </view>
</template>

<script>
import parentPage from '../../core/parent/page.js';
import { service } from '../../core/config.js';
import { funImages } from '../../core/data/demo';
import Swiper from '../../theme/components/swiper';
import SearchBar from '../../theme/components/searchbar';
import Category from '../../theme/components/category';
import IndexList from '../../theme/components/indexList';

export default class pageIndex extends parentPage {
  config = {
    navigationBarTitleText: '首页',
    navigationBarTextStyle: 'white',
    navigationBarBackgroundColor: '#049BFF'
  };

  components = {
    SearchBar,
    Category,
    IndexList,
    Swiper
  };

  data = {
    searchText: '搜索',
    swipers: [
      // 占位图，防止请求错误无图显示
      { image: '/images/swiper.png', url: '/pages/main/search' }
    ],
    categorys: [
      { title: '今', image: funImages[0] },
      { title: '晚', image: funImages[1] },
      { title: '吃', image: funImages[2] },
      { title: '鸡', image: funImages[3] }
    ],

    noMoreList: false,
    loading: false,
    list: [],
    page: 0,
    size: 5
  };

  onReady() {
    this.initPageData();
  }

  onPullDownRefresh() {
    this.initPageData();
  }

  onReachBottom() {
    setTimeout(() => {
      this.updateBookList(this.page);
      this.$apply();
    }, 200);
  }

  // 初始化页面数据
  initPageData() {
    // 初始化参数
    this.page = 0;

    // 请求列表
    this.updateBookList(this.page);

    // 处理轮播图
    this.swipers.push({ image: '/images/swiper.png' });

    // 处理菜单栏
    this.categorys.map((cate, index) => {
      const xnum = Math.min(Math.max(index, 1), 3);
      cate.url = `/pages/main/search?params=${this.helpers.$json({
        value: [xnum, 4 - xnum].map(item => this.helpers.getString(item)),
        index: index + 1,
        title: cate.title
      })}`;
    });
  }

  // 更新图书列表
  updateBookList(page) {
    if (this.loading || this.noMoreList) return;
    this.loading = true;
    // 请求列表
    this.$httpPost(
      service.list,
      {
        // 默认从0开始为第一页
        page: page,
        size: this.size
      },
      () => {
        this.loading = false;
      }
    )
      .then(({ data }) => {
        data = data.data || [];
        // 示例规则：最多20本
        if (this.list.length >= 20) {
          this.noMoreList = true;
          return;
        }

        // 请求到空列表后就认为没有更多了
        if (this.helpers.isArray(data) && data.length === 0) {
          this.noMoreList = true;
          return;
        }
        if (!this.page || +this.page === 0) {
          this.list = this.getBooks(data);
        } else {
          // 添加到列表中
          this.list = [...this.list, ...this.getBooks(data)];
        }
        // 成功了就增加一页
        this.page += 1;
        this.$apply();
      })
      .catch(() => {
        this.$notice.info('加载失败！');
      });
  }

  // 处理图书列表
  getBooks(data) {
    const len = this.list.length;
    return this.helpers.getArray(data).map((book, index) => {
      const xlen = len + index;
      // 拼接示例数据
      return {
        id: xlen,
        title: book.title,
        content: `简介: 大吉大利，今晚吃鸡。${book.title}；${book.title}。`,
        image: funImages[(xlen + 4) % 8],
        tags: ['tag1', 'tag2'],
        status: xlen % 2
      };
    });
  }

  methods = {
    testtap() {
      this.$alert
        .confirm('fdas')
        .then(() => {
          this.$httpGet('https://www.baidu.com', { a: 1, b: 2 }).then(res => {
            console.log(res);
          });
        })
        .catch(() => {
          this.$notice.info('取消');
        });
    }
  };
}
</script>

<style lang="less">
.page-index {
  // some style
}
</style>
