<template>
  <view class="page-index">
    <zanToptips/>
    <SearchBar :placeholder="searchText"></SearchBar>
    <Swiper :list.sync="swipers" height="380"></Swiper>
    <button class="zan-btn zan-btn--primary" @tap="showTopTips">确认付款</button>
    <button class="zan-btn zan-btn--danger">确认付款</button>
    <button class="zan-btn zan-btn--warn">确认付款</button>
    <Category :list.sync="categorys" col="4"></Category>
    <view style="margin: 20px 0">
      <zanTab1 :tab.sync="tab1" componentId="tab1"></zanTab1>
    </view>

    <view class="weui-loadmore weui-loadmore_line">
      <view class="weui-loadmore__tips weui-loadmore__tips_in-line">
        <text>暂无数据</text>
      </view>
    </view>
    <DataList :list.sync="list" title="图书列表" :loading.sync="loading" :noMore.sync="noMoreList"></DataList>

  </view>
</template>

<script>
import parentPage from '../../core/parent/page.js';
import Swiper from '../../theme/components/public/swiper';
import SearchBar from '../../theme/components/public/searchbar';
import Category from '../../theme/components/public/category';
import DataList from '../../theme/components/public/dataList';
import zanToptips from '@/theme/components/zanui/zan-toptips';
import zanTab from '@/theme/components/zanui/zan-tab';
import { funImages } from '../../core/data/demo';

export default class pageIndex extends parentPage {
  config = {
    navigationBarTitleText: '首页',
    navigationBarTextStyle: 'white',
    navigationBarBackgroundColor: '#049BFF'
  };

  components = {
    SearchBar,
    Category,
    DataList,
    Swiper,
    zanToptips,
    zanTab1: zanTab
  };

  data = {
    searchText: '搜索',
    swipers: [
      // 占位图，防止请求错误无图显示
      { image: '/images/swiper.png', url: '/pages/main/search' }
    ],
    categorys: [
      { title: '今', image: funImages[0] },
      { title: '晚', image: funImages[1] },
      { title: '吃', image: funImages[2] },
      { title: '鸡', image: funImages[3] }
    ],

    noMoreList: false,
    loading: false,
    list: [],
    page: 0,
    size: 5,
    tab1: {
      list: [
        {
          id: 'all',
          title: '全部'
        },
        {
          id: 'topay',
          title: '待付款'
        },
        {
          id: 'tosend',
          title: '待发货'
        },
        {
          id: 'send',
          title: '待收货'
        },
        {
          id: 'sign',
          title: '已完成'
        }
      ],
      selectedId: 'all',
      scroll: true,
      height: 45
    }
  };

  onReady() {
    console.log(this);
    this.initPageData();
  }

  onPullDownRefresh() {
    this.initPageData();
  }

  onReachBottom() {
    setTimeout(() => {
      this.updateBookList(this.page);
      this.$apply();
    }, 200);
  }

  // 初始化页面数据
  initPageData() {
    // 初始化参数
    this.page = 0;

    // 请求列表
    this.updateBookList(this.page);

    // 处理轮播图
    this.swipers.push({ image: '/images/swiper.png' });

    // 处理菜单栏
    this.categorys.map((cate, index) => {
      const xnum = Math.min(Math.max(index, 1), 3);
      cate.url = `/pages/main/search?params=${this.helpers.parseString({
        value: [xnum, 4 - xnum].map(item => this.helpers.ifString(item)),
        index: index + 1,
        title: cate.title
      })}`;
    });
  }

  // 更新图书列表
  async updateBookList(page) {
    if (this.loading || this.noMoreList) return;
    this.loading = true;
    try {
      await this.wxService.userLogin(this);
      // 请求列表
      this.http
        .post(
          this.appConfig.service.list,
          {
            page: page,
            size: this.size
          },
          () => {
            this.loading = false;
          }
        )
        .then(({ data }) => {
          data = data.data || [];
          // 示例规则：最多20本
          if (this.list.length >= 20) {
            this.noMoreList = true;
            return;
          }

          // 请求到空列表后就认为没有更多了
          if (this.helpers.isArray(data) && data.length === 0) {
            this.noMoreList = true;
            return;
          }
          if (!this.page || +this.page === 0) {
            this.list = this.getBooks(data);
          } else {
            // 添加到列表中
            this.list = [...this.list, ...this.getBooks(data)];
          }
          // 成功了就增加一页
          this.page += 1;
          this.$apply();
        })
        .catch(err => {
          console.error(err);
          // this.$notice.info('加载失败！');
        });
    } catch (err) {}
  }

  // 处理图书列表
  getBooks(data) {
    const len = this.list.length;
    return this.helpers.ifArray(data).map((book, index) => {
      const xlen = len + index;
      // 拼接示例数据
      return {
        id: xlen,
        title: book.title,
        content: `简介: 大吉大利，今晚吃鸡。${book.title}；${book.title}。`,
        image: funImages[(xlen + 4) % 8],
        tags: ['tag1', 'tag2'],
        status: xlen % 2
      };
    });
  }

  methods = {
    showTopTips() {
      this.$invoke('zanToptips', 'show', 'toptips的内容 Wepy');
    }
  };

  events = {
    zanTabChange({ componentId, selectedId }, event) {
      console.log(componentId, selectedId, event);
      this[componentId].selectedId = selectedId;
      this.$apply();
    }
  };
}
</script>

<style lang="less">
.page-index {
  // some style
}
</style>
