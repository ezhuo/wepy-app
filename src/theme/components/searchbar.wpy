<template>
  <view class="weui-search-bar search-view" style="background:{{ scrollTop === 0 ?'-webkit-linear-gradient(top, rgba(105,195,170, 1), rgba(105,195,170, 0.3))' :( scrollTop<200 ? 'rgba(105,195,170,'+(scrollTop/400+0.3) +')' : 'rgba(105,195,170,1)')  }} ">
    <view class="weui-search-bar__form">
      <view class="weui-search-bar__box">
        <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
        <input type="text" class="weui-search-bar__input" placeholder="{{placeholder}}" value="{{inputVal}}" focus="{{inputShowed}}" @input="inputTyping" @blur="showInput(false)" confirm-type="search" @confirm="search" />
        <block wx:if="{{inputVal.length > 0}}">
          <view class="weui-icon-clear" @tap="clearInput">
            <icon type="clear" size="14"></icon>
          </view>
        </block>
      </view>
      <label class="weui-search-bar__label" hidden="{{inputShowed}}" @tap="showInput(true)">
        <icon class="weui-icon-search" type="search" size="14"></icon>
        <view class="weui-search-bar__text">{{computedPlaceholder}}</view>
      </label>
    </view>
    <view class="weui-search-bar__cancel-btn" hidden="{{!inputShowed}}" @tap="search">搜索</view>
  </view>
</template>

<script>
import parentComponent from '../../core/parent/component.js';

export default class SearchBar extends parentComponent {
  props = {
    placeholder: {
      type: String,
      default: '搜索'
    }
  };

  data = {
    inputShowed: false,
    inputVal: '',
    scrollTop: 0
  };

  computed = {
    computedPlaceholder() {
      return this.inputVal || this.placeholder;
    }
  };

  methods = {
    showInput(isShow) {
      this.inputShowed = isShow === 'true';
      this.$apply();
    },
    search() {
      const params = {
        key_word: this.inputVal || this.placeholder
      };
      wx.navigateTo({
        url: `/pages/main/list?params=${JSON.stringify(params)}`
      });
    },
    clearInput(cb) {
      setTimeout(() => {
        this.inputVal = '';
        this.$apply();
      });
    },
    inputTyping(e) {
      this.inputVal = e.detail.value;
    }
  };
}
</script>

<style type="less">
@import '../styles/custom/fn.less';

.weui-search-bar__cancel-btn {
  /* color: @weuiColorPrimary; */
  color:#fff;
  font-weight:bold;
}

.search-view {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  z-index: 500;
  width: 100%;
  /* height: 120rpx; */
  /* background: gray; */
  /* display: flex; */
  /* flex-direction: column; */
  border:0
}

.search-btn{
 
  background-color:blueviolet;
 
  align-items: center;
  border-top-left-radius: 0rpx;
  border-bottom-left-radius: 0rpx;
  
  border:none;
  position: relative;
}
</style>
